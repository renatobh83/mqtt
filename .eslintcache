[{"C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\router\\index.js":"1","C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\pages\\temperatura.js":"2","C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\index.js":"3","C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\App.js":"4","C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\pages\\navbar.js":"5","C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\components\\LineChart.js":"6","C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\services\\API.js":"7","C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\components\\slider.js":"8"},{"size":419,"mtime":1611766349686,"results":"9","hashOfConfig":"10"},{"size":2680,"mtime":1611771818867,"results":"11","hashOfConfig":"10"},{"size":220,"mtime":1611076162173,"results":"12","hashOfConfig":"10"},{"size":156,"mtime":1611076979659,"results":"13","hashOfConfig":"10"},{"size":278,"mtime":1611076464917,"results":"14","hashOfConfig":"10"},{"size":1351,"mtime":1611755066631,"results":"15","hashOfConfig":"10"},{"size":550,"mtime":1611093744192,"results":"16","hashOfConfig":"10"},{"size":1651,"mtime":1611766207647,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"9i7dhm",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\router\\index.js",[],["37","38"],"C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\pages\\temperatura.js",["39"],"import React, { useEffect, useState } from 'react';\nimport LineChart from '../components/LineChart';\nimport { getTemperatura } from '../services/API';\nimport SliderChart from '../components/slider';\nimport moment from 'moment';\n\nfunction Temperatura() {\n    const [temperaturaDados, setTemperaturaDados] = useState([]);\n    const [label, setLabel] = useState([]);\n    const [i, setI] = useState(false);\n    const [limitTemperatura, setLimit] = useState(5);\n    const [max, setMax] = useState(null);\n    const [min, setMin] = useState(null);\n    const [refreshInterval, setRefreshInterval] = useState(300000 || 0);\n\n    const fetchTemp = async () => {\n        console.log('LOad fetch');\n        const res = await getTemperatura();\n\n        if (res.status === 200) {\n            setTemperaturaDados(res.data.temperatura);\n            setLabel(res.data.periodo);\n            setMax(res.data.max);\n            setMin(res.data.min);\n            setI(true);\n        }\n    };\n\n    const current = temperaturaDados.slice(0, limitTemperatura);\n    const labelCurrent = label.slice(0, limitTemperatura);\n\n    const onChangeSelect = (e) => {\n        const newLimit = Math.ceil(temperaturaDados.length * (e / 100));\n        setLimit(newLimit);\n        setI(true);\n    };\n\n    useEffect(() => {\n        if (refreshInterval && refreshInterval > 0) {\n            const interval = setInterval(fetchTemp, refreshInterval);\n            return () => clearInterval(interval);\n        } else {\n        }\n    }, [refreshInterval]);\n    useEffect(() => {\n        fetchTemp();\n    }, []);\n    return (\n        <div className=\"container\">\n            {temperaturaDados.length > 0 && label.length > 0 && (\n                <>\n                    <LineChart\n                        data={current}\n                        labels={labelCurrent}\n                        update={i}\n                        set={setI}\n                    />\n                    <SliderChart change={onChangeSelect} />\n                    {max !== null && min !== null && (\n                        <>\n                            <div class=\"flex\">\n                                Maxima : <span>{max.DHT11.Temperature}</span> -{' '}\n                                {moment(max.Time).format('DD/MM/YYYY HH:mm')}\n                            </div>\n\n                            <div class=\"flex\">\n                                Minima : <span>{min.DHT11.Temperature}</span> -{' '}\n                                {moment(min.Time).format('DD/MM/YYYY HH:mm')}\n                            </div>\n                        </>\n                    )}\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default Temperatura;\n","C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\index.js",[],"C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\App.js",[],"C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\pages\\navbar.js",[],"C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\components\\LineChart.js",[],"C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\services\\API.js",[],["40","41"],"C:\\Users\\renato\\Desktop\\MQTT\\Front\\mqtt\\src\\components\\slider.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":14,"column":29,"nodeType":"48","messageId":"49","endLine":14,"endColumn":47},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'setRefreshInterval' is assigned a value but never used.","Identifier","unusedVar",["52"],["53"],"no-global-assign","no-unsafe-negation"]